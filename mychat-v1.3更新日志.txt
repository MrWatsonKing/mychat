mychat-v1.3更新日志 by:Mr.King @20180601

发现问题和解决方案

1.新用户不会使用help命令查看帮助，以及帮助列表信息不充分的问题
解决办法：
	a.客户端一旦开启并且链接成功，就输出提示语句"command:help to view help list"，主动提示用户使用help命令。
	b.完善help list，提供更加丰富但依旧简要的使用提示，包括三大块:commands,talking和file sharing，为用户提供全方位的帮助信息。


2.接收文件和聊天日志直接放在工作目录，导致工作目录比较杂乱的问题
解决办法：
	在软件工作目录下，创建name_file和name_log文件夹，将接收文件和聊天日志分别放入文件夹中。如果文件夹已经存在并且可用，则直接在文件夹中操作。


3.聊天日志行间距太大信息密集度低低问题
解决办法：
	每一次写入聊天消息记录的时候，不再追加额外的\n。


4.chatroom内聊天过程中，不能随时查看在线用户列表的问题
解决办法：
	1.聊天室内聊天环节中增加对:online命令的支持，输入该命令并回车，即可获取最新在线用户列表。
	2.相应的，服务器在消息转发环节，获得:online命令时，会调用pcheckon函数，回送在线用户列表。
	3.为了实现上述两点功能，分别对服务器和客户端的pcheckon()函数进行了完全重写。
	4.现在在任何地方查询在线用户列表，都会附带显示最新的时间戳。


5.客户端和服务器主函数中，调用各自功能函数的代码存在不必要环节的问题
解决办法：
	1.客户端和服务器中，同时删除command枚举和pcommand()函数，同时将pcommand()函数的代码挪到主函数中。
	2.删掉pquit()、punknown()等内容少的函数，直接将函数内容提取到调用处。


6.当一个用户正在聊天室中进行聊天时，未知用户用正确的用户名和密码重复登陆但系统没有提示或解决方案的问题
解决办法：
	1.鉴于此软件的主要使用对象是局域网中进行bash下UC开发的程序员，所以基本排除盗号和恶意登录的可能性
	2.当客户端因为未知错误而崩溃时，或者单纯因为用户想要换一台电脑工作时，简单而快速的重新登录变得必要。
	3.基于以上情况，规定任何有效的重复登录均默认挤掉前次登陆，此时服务器会根据用户名获取前次登陆的cfd，再根据cfd-tid映射表找到对应的前次登陆服务线程的tid，然后关闭前次登陆线程，并在前次登陆电脑上发布强制下线提示。如果前次登陆已经崩溃，则消息不可见，如果前次登陆正常运行，则前次登陆会显示提示消息，然后退出整个进程。这样不论是因为崩溃还是换电脑而重复登陆，都可以无缝切换。
	4.基于此，改写了服务器的plogin()登录验证模块的部分代码，登陆时会对在线用户列表进行检查，判断用户是否已经在聊天室中。然后改写了客户端的接收线程代码，支持解析强制下线认证消息和自行强制下线。
	5.为了实现服务器对指定服务线程的正确关闭，修改了服务器的主函数代码，在头文件中新增了一个ctd{int cfd;pthread_t tid；int status;}结构体，在sermain.c中创建了一个全局的ctdarr[1000]，每次客户服务线程创建成功，就将对应的cfd和tid存入ctdarr的最靠前的、未占用的元素位置，从而实现了cfd和tid的映射。
	6.所有的服务线程创建的时候，都必须在ctdarr映射表中注册，退出的时候必须解除注册，强制下线的时候必须强制解除注册，这三种操作只有完全成功的时候，服务器才会给出线程创建成功、线程退出成功、线程取消成功的提示。在服务器sermain.c中创建了一个全局变量int nthreads，用于追踪记录和打印显示所有服务线程总数目的变化情况。



《尚未解决》
7.客户端的登陆状态没有和服务器同步，导致客户端刚登陆就因为意外情况卡顿或崩溃强制退出，但服务器的对应服务线程没有回收的问题
解决办法：
	1.首先，这个问题产生但原因是，服务器对登陆状态和在线状态进行分别处理，“登陆”表示通过了服务器但账号密码认证，“在线”表示“登陆”成功并且进入了聊天室，所有“在线”状态的用户会收到实时转发的消息，但“未登陆”或“已登陆”未进入聊天室因而“不在线”的用户，将不会收到消息。前面处理了“在线”状态下重复登陆和线程回收的问题，但还没有处理“登陆”而“不在线”状态下的重复登陆和线程回收问题。
	2.解决办法是，在客户端登陆服务器的时候，进行登陆状态检查，如果该用户已经处于登陆状态，则强制结束之前的登陆状态，并关闭之前对应的服务线程。
	3.为了解决这个问题，需要对在线用户列表进行重新定义，增加一个聊天状态参数int chatstatus，进入聊天室则设置chatstatus=1,退出聊天室则设置chatstatus=0;只对chatstatus==1的用户转发消息，而对chatstatus==0的用户则不会收到消息。
	

《尚未解决》
8.上传文件至服务器，查看在线文件，并从服务器下载文件的问题
解决办法：